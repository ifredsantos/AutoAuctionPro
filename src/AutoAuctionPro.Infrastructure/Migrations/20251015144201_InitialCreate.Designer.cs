// <auto-generated />
using System;
using AutoAuctionPro.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AutoAuctionPro.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251015144201_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AmountSold")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("CloseDateUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("OpenDateUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("StartingBid")
                        .HasColumnType("numeric");

                    b.Property<string>("VehicleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WinnerBidder")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Bid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BidTimeUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BidderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Vehicle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("IsSold")
                        .HasColumnType("boolean");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("StartingBid")
                        .HasColumnType("numeric");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<int>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Hatchback", b =>
                {
                    b.HasBaseType("AutoAuctionPro.Domain.Entities.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("integer");

                    b.ToTable("Vehicles", t =>
                        {
                            t.Property("NumberOfDoors")
                                .HasColumnName("Hatchback_NumberOfDoors");
                        });

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.SUV", b =>
                {
                    b.HasBaseType("AutoAuctionPro.Domain.Entities.Vehicle");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Sedan", b =>
                {
                    b.HasBaseType("AutoAuctionPro.Domain.Entities.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Truck", b =>
                {
                    b.HasBaseType("AutoAuctionPro.Domain.Entities.Vehicle");

                    b.Property<double>("LoadCapacityKg")
                        .HasColumnType("double precision");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Auction", b =>
                {
                    b.HasOne("AutoAuctionPro.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Auction")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Bid", b =>
                {
                    b.HasOne("AutoAuctionPro.Domain.Entities.Auction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Auction", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("AutoAuctionPro.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Auction");
                });
#pragma warning restore 612, 618
        }
    }
}
